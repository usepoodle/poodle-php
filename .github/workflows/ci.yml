name: CI

on:
  push:
    branches: [main, develop]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: ["8.1", "8.2", "8.3", "8.4"]
        dependency-version: [prefer-lowest, prefer-stable]

    name: P${{ matrix.php }} - ${{ matrix.dependency-version }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: json, mbstring
          coverage: xdebug

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies
        run: composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

      - name: Run tests
        run: composer test

      - name: Upload coverage to Codecov
        if: matrix.php == '8.1' && matrix.dependency-version == 'prefer-stable'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/clover.xml
          flags: unittests
          name: codecov-umbrella

  code-quality:
    runs-on: ubuntu-latest

    name: Code Quality

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: json, mbstring

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: dependencies-php-8.1-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Check code style
        run: composer cs-check

      - name: Run PHPStan
        run: composer phpstan

      - name: Run Psalm
        run: composer psalm

  security:
    runs-on: ubuntu-latest

    name: Security Check

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: json, mbstring

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Security Check
        run: composer audit

  publish:
    runs-on: ubuntu-latest
    name: Publish to Packagist
    needs: [test, code-quality, security]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: json, mbstring

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-dev

      - name: Validate composer.json
        run: composer validate --strict

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Packagist Update
        run: |
          curl -XPOST -H'content-type:application/json' \
            'https://packagist.org/api/update-package?username=${{ secrets.PACKAGIST_USERNAME }}&apiToken=${{ secrets.PACKAGIST_TOKEN }}' \
            -d'{"repository":{"url":"https://github.com/${{ github.repository }}"}}'
